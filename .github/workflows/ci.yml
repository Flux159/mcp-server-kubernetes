name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Set up Minikube
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          # Start minikube with additional flags to support kubectl cp
          minikube start --driver=docker --extra-config=apiserver.enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota
          minikube status

          # Enable necessary addons
          minikube addons enable default-storageclass
          minikube addons enable storage-provisioner

      - name: Configure kubectl for Minikube
        run: |
          # Get the minikube IP and configure kubectl
          MINIKUBE_IP=$(minikube ip)
          echo "Minikube IP: $MINIKUBE_IP"

          # Update kubeconfig to use the correct server URL
          kubectl config set-cluster minikube --server=https://$MINIKUBE_IP:8443 --insecure-skip-tls-verify=true

          # Verify connection
          kubectl cluster-info
          kubectl get nodes

      - name: Start kubectl proxy
        run: |
          # Start the proxy in background and save the PID
          # This gets around having to set the ca cert stuff in bun/node at ~/.minikube/ca.crt which didnt work because no SAN name in cert.
          kubectl proxy --port=8080 &
          echo "KUBECTL_PROXY_PID=$!" >> $GITHUB_ENV

          # Give the proxy a moment to start
          sleep 3

          # Get the current server URL and replace it with proxy URL
          MINIKUBE_IP=$(minikube ip)
          sed -i "s|https://$MINIKUBE_IP:8443|http://localhost:8080|g" ~/.kube/config

          # Verify the change took effect
          grep "server:" ~/.kube/config

      - name: Run tests and generate JUnit report
        run: |
          # Run tests with both default and JUnit reporters
          bun run test --reporter default --reporter junit --outputFile junit-results.xml

      - name: Test Report
        uses: dorny/test-reporter@v2
        if: always()
        with:
          name: Bun Tests # Name of the check run which will be created
          path: junit-results.xml # Path to test results
          reporter: jest-junit # Format of test results (jest-junit is compatible with Bun's JUnit output)
          fail-on-error: true # Fail the workflow if there are test failures

      - name: Verify build works
        run: bun run build

      - name: Clean up kubectl proxy
        if: always()
        run: |
          # Always attempt to kill the proxy process even if previous steps fail
          if [ -n "$KUBECTL_PROXY_PID" ]; then
            echo "Stopping kubectl proxy (PID: $KUBECTL_PROXY_PID)"
            kill $KUBECTL_PROXY_PID || true
          fi

          # Restore the original kubeconfig (optional)
          MINIKUBE_IP=$(minikube ip)
          sed -i "s|http://localhost:8080|https://$MINIKUBE_IP:8443|g" ~/.kube/config
